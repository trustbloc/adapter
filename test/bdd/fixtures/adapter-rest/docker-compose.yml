#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  issuer.adapter.rest.example.com:
    container_name: issuer.adapter.rest.example.com
    image: ${ISSUER_ADAPTER_REST_IMAGE}:latest
    environment:
      - ADAPTER_REST_HOST_URL=0.0.0.0:9070
      - ADAPTER_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - ADAPTER_REST_TLS_SYSTEMCERTPOOL=true
      - ADAPTER_REST_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - ADAPTER_REST_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST=0.0.0.0:9071
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST_EXTERNAL=http://issuer.adapter.rest.example.com:9071
      - ADAPTER_REST_TRUSTBLOC_DOMAIN=${BLOC_DOMAIN}
      - ADAPTER_REST_UNIVERSAL_RESOLVER_URL=http://did.rest.example.com:8072/1.0/identifiers
      - ADAPTER_REST_DSN=mysql://issueradapter:issueradapter-secret-pw@tcp(mysql:3306)/
      - ADAPTER_REST_LOGLEVEL=debug
    ports:
      - 9070:9070
      - 9071:9071
    entrypoint: ""
    command:  /bin/sh -c "adapter-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      - bdd_net

  rp.adapter.rest.example.com:
    container_name: rp.adapter.rest.example.com
    image: ${RP_ADAPTER_REST_IMAGE}:latest
    environment:
      - ADAPTER_REST_HOST_URL=0.0.0.0:8070
      - ADAPTER_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - ADAPTER_REST_TLS_SYSTEMCERTPOOL=true
      - ADAPTER_REST_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - ADAPTER_REST_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - ADAPTER_REST_DSN=mysql://rpadapter:rpadapter-secret-pw@tcp(mysql:3306)/
      - ADAPTER_REST_OP_URL=http://PUT-SOMETHING-HERE.com
      - ADAPTER_REST_PRESENTATION_DEFINITIONS_FILE=/etc/testdata/presentationdefinitions.json
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST=0.0.0.0:8071
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST_EXTERNAL=http://rp.adapter.rest.example.com:8071
      - ADAPTER_REST_TRUSTBLOC_DOMAIN=${BLOC_DOMAIN}
      - ADAPTER_REST_HYDRA_URL=https://hydra.trustbloc.local:4445
      - ADAPTER_REST_UNIVERSAL_RESOLVER_URL=http://did.rest.example.com:8072/1.0/identifiers
      - ADAPTER_REST_LOGLEVEL=debug
    ports:
      - 8070:8070
    entrypoint: ""
    command:  /bin/sh -c "adapter-rest start"
    volumes:
      - ../keys/tls:/etc/tls
      - ../testdata:/etc/testdata
    networks:
      - bdd_net
    depends_on:
      - hydra
      - mysql

  hydra:
    container_name: hydra.trustbloc.local
    image: oryd/hydra:v1.3.2-alpine
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
    command:  /bin/sh -c "hydra migrate sql --read-from-env --yes; hydra serve all"
    entrypoint: ""
    environment:
      - DSN=mysql://rpadapterhydra:rpadapterhydra-secret-pw@tcp(mysql:3306)/rpadapterhydra?max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=https://localhost:4444
      - URLS_CONSENT=https://localhost:8070/consent
      - URLS_LOGIN=https://localhost:8070/login
      - SECRETS_SYSTEM=testSecretsSystem
      - OIDC_SUBJECT_TYPES_SUPPORTED=public
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=testSecretsSystem
      - SERVE_TLS_KEY_PATH=/etc/tls/ec-key.pem
      - SERVE_TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
    restart: unless-stopped
    volumes:
      - ../keys/tls:/etc/tls
    depends_on:
      - mysql
    networks:
      - bdd_net

  mysql:
    container_name: mysql
    image: mysql:${MYSQL_IMAGE_TAG}
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
    logging:
      driver: "none"
    volumes:
      - ./mysql-config:/docker-entrypoint-initdb.d
    networks:
      - bdd_net

networks:
  bdd_net:
    driver: bridge
