# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0


name: $(SourceBranchName)-$(Date:yyyyMMdd).$(Rev:r)
trigger:
  - main
pr:
  - main

variables:
  GO_VERSION: 1.15
  GOPATH: $(Agent.BuildDirectory)/go

jobs:
  - job: Checks
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - script: make checks
        displayName: Run checks

  - job: UnitTest
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - script: make unit-test
        displayName: Run unit test
      - script: bash <(curl https://codecov.io/bash)
        env:
          CODECOV_UPLOAD_TOKEN: $(CODECOV_UPLOAD_TOKEN)
        displayName: Upload coverage to Codecov

  - job: BDDTest
    pool:
      vmImage: ubuntu-20.04
    strategy:
      parallel: 2
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          echo '127.0.0.1 testnet.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 stakeholder-one.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 sidetree-mock.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 issuer-adapter-rest.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 issuer-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 mock-issuer-login.trustbloc.local' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make bdd-test
        env:
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        displayName: Run BDD tests

  - job: Publish
    dependsOn:
      - Checks
      - UnitTest
      - BDDTest
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          function logout {
            docker logout
          }
          trap logout EXIT
          source ci/version_var.sh
          echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USER --password-stdin
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc

          make issuer-adapter-rest-docker
          docker tag ghcr.io/trustbloc/issuer-adapter:latest ${ISSUER_ADAPTER_REST_PKG}:${ADAPTER_REST_TAG}
          docker push ${ISSUER_ADAPTER_REST_PKG}:${ADAPTER_REST_TAG}

          make rp-adapter-rest-docker
          docker tag ghcr.io/trustbloc/rp-adapter:latest ${RP_ADAPTER_REST_PKG}:${ADAPTER_REST_TAG}
          docker push ${RP_ADAPTER_REST_PKG}:${ADAPTER_REST_TAG}

          cd ./cmd/wallet-js-client
          sed -i 's/"version": "0.1.0"/"version": "'${NPM_WALLET_PKG_TAG}'"/g' package.json
          sed -i 's#"name": "@trustbloc/wallet-adapter-web"#"name": "@'${NPM_WALLET_PKG_NAME}'"#g' package.json
          sed -i 's#"url": "git://github.com/trustbloc/edge-adapter.git"#"url": "git://github.com/'${NPM_WALLET_PKG_REPO}'.git"#g' package.json
          npm install
          npm publish
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
          NPM_WALLET_PKG_TAG: $(NPM_WALLET_PKG_TAG)
          NPM_WALLET_PKG_NAME: $(NPM_WALLET_PKG_NAME)
          NPM_WALLET_PKG_REPO: $(NPM_WALLET_PKG_REPO)
